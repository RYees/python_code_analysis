Repository Structure: '
' ├── notebook
│   └── note_book.ipynb
└── app.py
 '
' Commit History: 
{"insertions": [86, 4], "deletions": [0, 6], "lines": [86, 10], "committed_datetime": ["2023-12-13 19:50:58", "2023-12-14 08:50:54"], "commit_count": 2} 
 Content: 
import pandas as pd

from sqlalchemy import create_engine, MetaData, Table

import psycopg2

databse_name = 'telecome'

table_name = 'xdr_data'

con_param ={"host": "localhost","user": "postgres", "password":"1272", "port":"5432", "database":databse_name}

print(databse_name)

engin  = create_engine(f"postgresql://{con_param['user']}:{con_param['password']}@{con_param['host']}/{con_param['port']}/{con_param['database']}")



sql_query = 'SELECT * FROM xdr_data'



conn = psycopg2.connect(

    host="localhost",

    port=5432,

    database="telecome",

    user="postgres",

    password="1272"

)

cursor =conn.cursor()

cursor.execute(sql_query)
 

Repository Structure: '
' ├── setup.py
├── user_overview_plots.py
├── data_loader.py
├── database_operations
│   ├── mysql_integration.py
│   └── data_export.py
├── satisfaction_metrics
│   ├── regression_model.py
│   ├── k_means_satisfaction.py
│   └── satisfaction_scores.py
├── data_exploration
│   ├── exploration_data_analysis.py
│   └── visualizations.py
├── engagement_metrics
│   ├── k_means_clustering.py
│   └── engagement_analysis.py
├── experience_visualizations.py
├── README.md
├── user_overview_analysis.py
├── bivariate_analysis.py
├── engagement_visualizations.py
├── model_deployment
│   ├── mlops_tools
│   └── docker_setup
├── experience_metrics
│   ├── experience_analysis.py
│   └── experience_clustering.py
└── requirements.txt
 '
'  

